<?php
/**
 * Generated by Protobuf protoc plugin.
 */


namespace google\protobuf;

/**
 * Protobuf message : FileDescriptorSet
 *
 * @\Protobuf\Annotation\Descriptor(
 *   name="FileDescriptorSet",
 *   package="google.protobuf",
 *   fields={
 *     @\Protobuf\Annotation\Field(
 *       name="file",
 *       tag=1,
 *       type=11,
 *       label=3,
 *       reference="google.protobuf.FileDescriptorProto"
 *     )
 *   }
 * )
 */
class FileDescriptorSet extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * file repeated message = 1
     *
     * @var \Doctrine\Common\Collections\Collection<"\google\protobuf\FileDescriptorProto">
     */
    protected $file = null;

    /**
     * Check if 'file' has a value
     *
     * @return bool
     */
    public function hasFileList()
    {
        return $this->file !== null;
    }

    /**
     * Get 'file' value
     *
     * @return \Doctrine\Common\Collections\Collection<"\google\protobuf\FileDescriptorProto">
     */
    public function getFileList()
    {
        return $this->file;
    }

    /**
     * Set 'file' value
     *
     * @param \Doctrine\Common\Collections\Collection<"\google\protobuf\FileDescriptorProto"> $value
     */
    public function setFileList(\Doctrine\Common\Collections\Collection $value)
    {
        return $this->file = $value;
    }

    /**
     * Add a new element to 'file'
     *
     * @param \google\protobuf\FileDescriptorProto $value
     */
    public function addFile(\google\protobuf\FileDescriptorProto $value)
    {
        $this->file[] = $value;
    }

    /**
     * Get unknown values
     *
     * @return Protobuf\UnknownFieldSet
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->file !== null) {
            foreach ($this->file as $val) {
                $innerSize = $val->serializedSize($context);

                $size += 1;
                $size += $innerSize;
                $size += $calculator->computeVarintSize($innerSize);
            }
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \google\protobuf\FileDescriptorProto();

                if ($this->file === null) {
                    $this->file = new \Protobuf\MessageCollection();
                }

                $this->file->add($innerMessage);

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->file !== null) {
            foreach ($this->file as $val) {
                $writer->writeVarint($stream, 10);
                $writer->writeVarint($stream, $val->serializedSize($sizeContext));
                $val->writeTo($context);
            }
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = new \Protobuf\ReadContext($stream, $config->getStreamReader());
        $message = new \google\protobuf\FileDescriptorSet();

        $message->readFrom($context);

        return $message;
    }


}

